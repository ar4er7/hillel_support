services:
    
  broker:
    image: "redis:latest"
    container_name: hillel_support_broker

  cache:
    image: "redis:latest"
    container_name: hillel_support_cache


  mailing:
    image: "mailhog/mailhog:latest"
    container_name: hillel_support_mailing
    env_file: .env
    ports:
      - "8025:8025"
      
  database:
    image: "postgres:17"
    container_name: hillel_support_database
    env_file: .env
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $POSTGRES_USER -d ${POSTGRES_DB}"]
      interval: 10s
      retries: 5
      start_period: 10s
      timeout: 10s

    volumes:
      - "pg_data:/var/lib/postgresql/data"

  api: &app
    build:
      context: .
      dockerfile: Dockerfile

    image: hillel_support
    container_name: hillel_support_api
    ports:
      - "8000:8000"
    env_file: .env
    depends_on:
      database:
        condition: service_healthy
        restart: true

    volumes:
      - ./:/app

  worker:
    <<: *app
    container_name: hillel_support_worker
    ports: []
    entrypoint: bash
    command: -c "watchmedo auto-restart --pattern='*.py' --recursive --debug-force-polling -- celery -A config worker -l INFO"
    #was bash -c "celery -A config worker -l INFO"

volumes:
    pg_data: {}